
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEASSERT ASSIGN DIVIDE ELSE EQ FOR GE GT IDENTIFIER IF LBRACE LE LPAREN LT MINUS NE NUMBER PLUS RBRACE RPAREN SEMICOLON TIMES WHILEstatement : IDENTIFIER ASSIGN expression SEMICOLONexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expressionexpression : NUMBERexpression : IDENTIFIER'
    
_lr_action_items = {'IDENTIFIER':([0,3,8,9,10,11,],[2,4,4,4,4,4,]),'$end':([1,7,],[0,-1,]),'ASSIGN':([2,],[3,]),'NUMBER':([3,8,9,10,11,],[6,6,6,6,6,]),'SEMICOLON':([4,5,6,12,13,14,15,],[-7,7,-6,-2,-3,-4,-5,]),'PLUS':([4,5,6,12,13,14,15,],[-7,8,-6,-2,-3,-4,-5,]),'MINUS':([4,5,6,12,13,14,15,],[-7,9,-6,-2,-3,-4,-5,]),'TIMES':([4,5,6,12,13,14,15,],[-7,10,-6,10,10,-4,-5,]),'DIVIDE':([4,5,6,12,13,14,15,],[-7,11,-6,11,11,-4,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([3,8,9,10,11,],[5,12,13,14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> IDENTIFIER ASSIGN expression SEMICOLON','statement',4,'p_statement_assign','parser.py',125),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',129),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',130),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',131),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',132),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',143),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',147),
]
